{"version":3,"sources":["task.jsx","column.jsx","index.js"],"names":["Container","styled","div","Task","draggableId","this","props","transaction","txNumber","index","provided","draggableProps","dragHandleProps","ref","innerRef","title","React","Component","Title","h3","TaskList","Column","droppableArea","droppableTransactions","droppableId","droppableProps","transactions","map","placeholder","droppableAccounts","accounts","account","App","state","data","initialData","onDragEnd","result","key","ReactDOM","render","document","getElementById"],"mappings":"64wKAIA,IAAMA,EAAYC,IAAOC,IAAV,KAQMC,E,uKACP,IAAD,OAGL,OAEQ,kBAAC,IAAD,CAAWC,YAAW,UAAKC,KAAKC,MAAMC,YAAYC,SAA5B,MAA0CC,MAAOJ,KAAKC,MAAMG,QAC7E,SAACC,GAAD,OACG,kBAACV,EAAD,iBACQU,EAASC,eACTD,EAASE,gBAFjB,CAGIC,IAAKH,EAASI,WAEb,EAAKR,MAAMC,YAAYQ,c,GAblBC,IAAMC,W,8UCPxC,IAAMjB,EAAYC,IAAOC,IAAV,KAMTgB,EAAQjB,IAAOkB,GAAV,KAGLC,EAAWnB,IAAOC,IAAV,KAKOmB,E,uKACP,IACFC,EADC,OAGCC,EAAwB,kBAAC,IAAD,CAAWC,YAAanB,KAAKC,MAAMS,QAC5D,SAACL,GAAD,OACG,kBAACU,EAAD,eACIP,IAAKH,EAASI,UACVJ,EAASe,gBAEZ,EAAKnB,MAAMoB,aAAaC,KACrB,SAAUpB,EAAaE,GACnB,OACI,kBAAC,EAAD,CAAMF,YAAaA,EAAaE,MAAOA,OAIlDC,EAASkB,gBAKhBC,EAAoB,kBAAC,IAAD,CAAWL,YAAanB,KAAKC,MAAMS,QAC5D,SAACL,GAAD,OACG,kBAACU,EAAD,eACIP,IAAKH,EAASI,UACVJ,EAASe,gBAEZ,EAAKnB,MAAMwB,UAAY,EAAKxB,MAAMwB,SAASH,KACxC,SAAUI,EAAStB,GACf,OACI,kBAAC,EAAD,CAAMsB,QAASA,EAAStB,MAAOA,OAI1CC,EAASkB,gBAWlB,OANIvB,KAAKC,MAAMoB,eACXJ,EAAgBC,GAEhBlB,KAAKC,MAAMwB,WACXR,EAAgBO,GAIhB,kBAAC,EAAD,KACI,kBAACX,EAAD,KAAQb,KAAKC,MAAMS,OAClBO,O,GAlDmBN,IAAMC,WCTpCe,E,4MACJC,MAAQ,CAAEC,KAAMC,EAAaL,SAAUA,G,EAEvCM,UAAY,SAAAC,K,uDAKV,OACE,kBAAC,IAAD,CAAiBD,UAAW/B,KAAK+B,WAC7B,kBAAC,EAAD,CAAQE,IAAI,sBAAsBvB,MAAM,eAAeW,aAAcrB,KAAK4B,MAAMC,Y,GAVxElB,IAAMC,WAiBxBsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.e50614e5.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom: 8px;\n    \n`;\n\nexport default class Task extends React.Component {\n    render() {\n\n\n        return (\n         \n                <Draggable draggableId={`${this.props.transaction.txNumber}-a`} index={this.props.index}>\n                    {(provided) => (\n                        <Container\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                        >\n                            {this.props.transaction.title}\n                        </Container>\n                    )}\n                </Draggable>\n        \n        )\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './task';\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgray;\n    border-radius: 2px;\n\n`;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n  \n`;\n\nexport default class Column extends React.Component {\n    render() {\n        var droppableArea;\n\n        const droppableTransactions = <Droppable droppableId={this.props.title}>\n            {(provided) => (\n                <TaskList\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                >\n                    {this.props.transactions.map(\n                        function (transaction, index) {\n                            return (\n                                <Task transaction={transaction} index={index} />\n                            )\n                        }\n                    )}\n                    {provided.placeholder}\n                </TaskList>\n            )}\n        </Droppable>;\n\n        const droppableAccounts = <Droppable droppableId={this.props.title}>\n        {(provided) => (\n            <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n            >\n                {this.props.accounts && this.props.accounts.map(\n                    function (account, index) {\n                        return (\n                            <Task account={account} index={index} />\n                        )\n                    }\n                )}\n                {provided.placeholder}\n            </TaskList>\n        )}\n    </Droppable>\n\n        if (this.props.transactions) {\n            droppableArea = droppableTransactions;\n        }\n        if (this.props.accounts) {\n            droppableArea = droppableAccounts;\n        }\n        return (\n\n            <Container>\n                <Title>{this.props.title}</Title>\n                {droppableArea}\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@atlaskit/css-reset';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport initialData from './data/2017.json';\nimport accounts from './data/accounts.json';\nimport Column from './column';\n\nclass App extends React.Component {\n  state = { data: initialData, accounts: accounts };\n\n  onDragEnd = result => {\n\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n          <Column key=\"transactions-column\" title=\"Transactions\" transactions={this.state.data} />\n          {/* <Column key=\"accounts-column\" title=\"Accounts\" accounts={this.state.accounts} /> */}\n      </DragDropContext>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}