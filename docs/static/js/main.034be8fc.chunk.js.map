{"version":3,"sources":["transaction.jsx","components/Transactions.jsx","account.jsx","assigned-transaction.jsx","column.jsx","ing-parser/index.js","components/TransactionFileImport.jsx","index.js"],"names":["Container","styled","div","Date","span","Details","Info","Footer","Title","Sum","Transaction","props","transaction","title","date","parsedDetails","Detalii","Beneficiar","credit","debit","className","h3","Items","Filter","Transactions","transactions","length","type","data-toggle","aria-haspopup","aria-expanded","aria-label","placeholder","id","data-reference","aria-labelledby","href","map","Account","account","Day","Month","Line","Button","button","AssignedTransaction","Column","this","accounts","React","Component","processCsv","data","transactionLines","groupedTxns","_","groupBy","row","txns","Object","entries","key","value","txn","buildTransaction","push","console","log","parseTransactions","transactionRows","count","rowData","concat","prefixWithTransactionCount","filter","it","safeParseAmount","amount","localDateToLocalDateIsoFormat","result","parse","locale","ro","formatISO","representation","e","txNumber","rows","firstRow","balance","details","slice","cols","forEach","str","indexOf","s","split","originalData","DropZone","TransactionFileImport","setTransactions","onDrop","useCallback","acceptedFiles","file","Papa","complete","results","name","error","alert","useDropzone","getRootProps","getInputProps","files","path","size","HomeBank","target","rel","Introduction","App","useState","initialData","initialAccounts","ReactDOM","render","document","getElementById"],"mappings":"4wIAGA,IAAMA,EAAYC,IAAOC,IAAV,KASTC,EAAOF,IAAOG,KAAV,KAGJC,EAAUJ,IAAOC,IAAV,KAMPI,EAAOL,IAAOC,IAAV,KAEJK,EAASN,IAAOC,IAAV,KAKNM,EAAQP,IAAOC,IAAV,KAKLO,EAAMR,IAAOC,IAAV,KAyBMQ,MAnBf,SAAqBC,GAAQ,IACjBC,EAAgBD,EAAhBC,YACAC,EAAuED,EAAvEC,MAAOC,EAAgEF,EAAhEE,KAFS,EAEuDF,EAA1DG,cAAiBC,EAFd,EAEcA,QAASC,EAFvB,EAEuBA,WAAcC,EAAkBN,EAAlBM,OAAQC,EAAUP,EAAVO,MACrE,OACI,kBAACnB,EAAD,KACI,kBAACK,EAAD,KACI,kBAACC,EAAD,KAAOU,IAAoBC,GAA0B,QACrD,kBAAC,EAAD,KAAOH,GACP,kBAACP,EAAD,KACI,kBAACC,EAAD,KAAQK,GACR,kBAACJ,EAAD,KAAiB,MAAXS,EACF,0BAAME,UAAU,eAAeD,GAC/B,0BAAMC,UAAU,gBAAgBF,Q,mgBC9CxD,IAAMlB,EAAYC,IAAOC,IAAV,KAWTM,EAAQP,IAAOoB,GAAV,KAGLC,EAAQrB,IAAOC,IAAV,KAGLqB,EAAStB,IAAOC,IAAV,KA4FGsB,MAxFf,SAAsBb,GAAQ,IAAD,EACGA,EAAtBc,oBADmB,MACJ,GADI,EAG3B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,8BAAOA,EAAaC,QADtB,iBAGA,kBAACH,EAAD,KACE,8BACE,yBAAKH,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,uBACb,4BACEA,UAAU,4CACVO,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,kBASA,yBAAKV,UAAU,iBAAf,eAEF,2BACEO,KAAK,OACLP,UAAU,eACVW,aAAW,sCAIjB,yBAAKX,UAAU,YACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,uBACb,4BAAQA,UAAU,0BAA0BO,KAAK,UAAjD,WAIF,2BACEP,UAAU,uBACVO,KAAK,SACLK,YAAY,SACZD,aAAW,aAIjB,yBAAKX,UAAU,YACb,yBAAKA,UAAU,0BACb,4BAAQO,KAAK,SAASP,UAAU,6BAAhC,oBAGA,4BACEO,KAAK,SACLP,UAAU,kEACVa,GAAG,wBACHL,cAAY,WACZC,gBAAc,OACdC,gBAAc,QACdI,iBAAe,UAEf,0BAAMd,UAAU,WAAhB,oBAEF,yBACEA,UAAU,gBACVe,kBAAgB,yBAEhB,uBAAGf,UAAU,gBAAgBgB,KAAK,KAAlC,YAGA,uBAAGhB,UAAU,gBAAgBgB,KAAK,KAAlC,iBASZ,kBAACd,EAAD,KACGG,EAAaY,KAAI,SAACzB,GAAD,OAChB,kBAAC,EAAD,CAAaA,YAAaA,U,oNCxGpC,IAAMZ,EAAYC,IAAOC,IAAV,KAiBAoC,MATf,SAAiB3B,GAAQ,IACb4B,EAAY5B,EAAZ4B,QACR,OACI,kBAAC,EAAD,KACKA,GAAWA,I,o4CCZxB,IAAMvC,EAAYC,IAAOC,IAAV,KASTC,EAAOF,IAAOC,IAAV,KAUJsC,EAAMvC,IAAOC,IAAV,KAKHuC,GAAQxC,IAAOC,IAAV,KAELG,GAAUJ,IAAOC,IAAV,KAMPI,GAAOL,IAAOC,IAAV,KAEJwC,GAAOzC,IAAOC,IAAV,KAKJM,GAAQP,IAAOC,IAAV,KAKLO,GAAMR,IAAOC,IAAV,KAKHyC,GAAS1C,IAAO2C,OAAV,KA2BGC,OAvBf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAACL,EAAD,WACA,kBAACC,GAAD,aAEJ,kBAAC,GAAD,KACI,kBAAC,GAAD,2CACA,kBAACC,GAAD,KACI,kBAAC,GAAD,mBACA,kBAAC,GAAD,CAAKtB,UAAU,eAAf,QAEJ,kBAACsB,GAAD,KACI,kBAAC,GAAD,CAAOtB,UAAU,aAAjB,iCACA,kBAAC,GAAD,CAAOA,UAAU,aAAjB,2BACA,kBAACuB,GAAD,mB,iiBClEpB,IAAM3C,GAAYC,IAAOC,IAAV,MAWTM,GAAQP,IAAOoB,GAAV,MAGLC,GAAQrB,IAAOC,IAAV,MAGLqB,GAAStB,IAAOC,IAAV,MAIS4C,G,uKAEb,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KAAQC,KAAKpC,MAAME,OACnB,kBAAC,GAAD,KACI,8BACI,yBAAKO,UAAU,OACW,iBAArB2B,KAAKpC,MAAME,OACR,yBAAKO,UAAU,aACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,4CAA4CO,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtI,kBACA,yBAAKV,UAAU,iBAAf,eAIJ,2BAAOO,KAAK,OAAOP,UAAU,eAAeW,aAAW,sCAKnE,yBAAKX,UAAU,YACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,0BAA0BO,KAAK,UAAjD,WAEJ,2BAAOP,UAAU,uBAAuBO,KAAK,SAASK,YAAY,SAASD,aAAW,aAGxE,iBAArBgB,KAAKpC,MAAME,OACR,yBAAKO,UAAU,YACX,yBAAKA,UAAU,0BACX,4BAAQO,KAAK,SAASP,UAAU,6BAAhC,oBACA,4BAAQO,KAAK,SAASP,UAAU,kEAAkEa,GAAG,wBAAwBL,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,QAAQI,iBAAe,UAC1M,0BAAMd,UAAU,WAAhB,oBAEJ,yBAAKA,UAAU,gBAAgBe,kBAAgB,yBAC3C,uBAAGf,UAAU,gBAAgBgB,KAAK,KAAlC,YACA,uBAAGhB,UAAU,gBAAgBgB,KAAK,KAAlC,iBAQ5B,kBAAC,GAAD,KACKW,KAAKpC,MAAMc,cAAgBsB,KAAKpC,MAAMc,aAAaY,KAChD,SAAUzB,GACN,OACI,kBAAC,EAAD,CAAaA,YAAaA,OAIrCmC,KAAKpC,MAAMqC,UAAYD,KAAKpC,MAAMqC,SAASX,KACxC,SAAUE,GACN,OACI,kBAAC,EAAD,CAASA,QAASA,OAIR,0BAArBQ,KAAKpC,MAAME,OACR,kBAAC,GAAD,Y,GA/DYoC,IAAMC,W,4ECjBnC,SAASC,GAAWC,GAGzB,OAmFK,SAA2BC,GAKhC,IAJA,IAAMC,EAAcC,KAAEC,QAAQH,GAAkB,SAACI,GAAD,OAASA,EAAI,MAEzDC,EAAO,GAEX,MAAyBC,OAAOC,QAAQN,GAAxC,eAAsD,CAAC,IAAD,sBAA5CO,EAA4C,KAAvCC,EAAuC,KAC9CC,EAAMC,GAAiBH,EAAKC,GAClCJ,EAAKO,KAAKF,GAGZ,OADAG,QAAQC,IAAIT,GACLA,EA9FQU,CAqGV,SAAoCC,GACzC,IAAIC,EAAQ,EAWZ,OAVuBD,EAAgBhC,KAAI,SAACoB,GACzB,KAAXA,EAAI,IACRa,IAEF,IAAIC,EAAU,CAACD,GAGf,OAFAC,EAAUA,EAAQC,OAAOf,MA5GMgB,CADSrB,EA4HvCsB,QAAO,SAACjB,GAAD,QAAsB,SAAXA,EAAI,OACtBiB,QAAO,SAACC,GAAD,MAAkB,KAAVA,EAAG,MAClBD,QAAO,SAACC,GAAD,MAAkB,KAAVA,EAAG,QAlHhB,SAASC,GAAgBC,GAC9B,OAAc,MAAVA,GAA6B,KAAXA,EACb,IAEFA,EAOF,SAASC,GAA8BhE,GAC5C,IACE,IAAMiE,EAASC,aAAMlE,EAAM,eAAgB,IAAIX,KAAQ,CACrD8E,OAAQC,OAGV,OAAOC,aAAUJ,EAAQ,CAAEK,eAAgB,SAE3C,MAAOC,GACP,MAAO,cAWJ,SAASrB,GAAiBsB,EAAUC,GACzC,IAAMC,EAAWD,EAAK,GAEhBpE,EAAQyD,GAAgBY,EAAS,IACrCtE,EAAS0D,GAAgBY,EAAS,IAClCC,EAAUb,GAAgBY,EAAS,IAE/BE,EAAUH,EAAKI,MAAM,GAAGtD,KAAI,SAACuD,GAAD,OAAUA,EAAK,MAE7C7E,EAAgB,GAuBpB,OArBAwC,KAAEsC,QAAQH,GAAS,SAACI,GAClB,GAAIA,EAAIC,QAAQ,KAAO,EAAG,CACxB,IAAIC,EAAIF,EAAIG,MAAM,IAAK,GACvBlF,EAAciF,EAAE,IAAMA,EAAE,QAExBjF,EAAc+E,GAAOA,KAIb,CACVR,SAAUA,EACVxE,KAAMgE,GAA8BU,EAAS,IAC7C3E,MAAO2E,EAAS,GAChBrE,MAAOA,EACPD,OAAQA,EACRuE,QAASA,EACTS,aAAcX,EACdG,QAASA,EACT3E,cAAeA,G,+TC1EnB,IAAMoF,GAAWlG,IAAOC,IAAV,MA6DCkG,OAhDf,SAA+BzF,GAAQ,IAC7B0F,EAAoB1F,EAApB0F,gBAEFC,EAASC,uBACb,SAACC,GACCA,EAAcX,SAAQ,SAACY,GACrBC,KAAK1B,MAAMyB,EAAM,CACfE,SAAU,SAACC,EAASH,GAClBvC,QAAQC,IAAR,6BAAkCsC,EAAKI,OADZ,IAGrBnD,EAAOP,GADIyD,EAATxD,MAERiD,EAAgB3C,IAElBoD,MAAO,SAACA,EAAOL,GACbvC,QAAQC,IAAR,2BAAgCsC,EAAKI,KAArC,cAA+CC,IAC/CC,MAAM,oBAAD,OAAqBN,EAAKI,KAA1B,cAAoCC,YAKjD,CAACT,IApBiC,EAuBmBW,aAAY,CACjEV,WADME,EAvB4B,EAuB5BA,cAAeS,EAvBa,EAuBbA,aAAcC,EAvBD,EAuBCA,cAI/BC,EAAQX,EAAcnE,KAAI,SAACoE,GAAD,OAC9B,wBAAI5C,IAAK4C,EAAKW,MACXX,EAAKW,KADR,MACiBX,EAAKY,KADtB,aAKF,OACE,6BAASjG,UAAU,aACjB,kBAAC+E,GAAac,EAAa,CAAE7F,UAAW,aACtC,0BAAW8F,KACX,sFAEF,+BACE,qCACA,4BAAKC,M,kBCpDPG,GAAW,kBACf,uBAAGlF,KAAK,sBAAsBmF,OAAO,SAASC,IAAI,uBAAlD,gBAKF,SAASC,KACP,OACE,yBAAKrG,UAAU,mBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,+DACA,kIAEkC,IAChC,uBACEgB,KAAK,uBACLmF,OAAO,SACPC,IAAI,uBAHN,WAMK,IATP,OAUO,IACL,uBACEpF,KAAK,mCACLmF,OAAO,SACPC,IAAI,uBAHN,4BAQF,4DACA,4BACE,wDAC2B,kBAAC,GAAD,MAAa,KAExC,oDACuB,kDADvB,SAC6D,IAC3D,kDAFF,aAIA,+EACA,yFACA,sFAQZ,SAASE,KAAO,IAAD,EAC2BC,mBAASC,IADpC,mBACNnG,EADM,KACQ4E,EADR,OAEmBsB,mBAASE,IAF5B,mBAEN7E,EAFM,UAIb,OACE,oCACE,kBAACyE,GAAD,MACA,yBAAKrG,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,8BACEA,UAAU,eACVmE,KAAK,IACLvD,YAAY,oBAGhB,yBAAKZ,UAAU,YACb,4BACEO,KAAK,SACLP,UAAU,0CAFZ,wBAMA,kBAAC,GAAD,CAAuBiF,gBAAiBA,IACxC,4BACE1E,KAAK,SACLP,UAAU,0CAFZ,gBAOF,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACb,kBAAC,GAAD,CACEyC,IAAI,kBACJhD,MAAM,WACNmC,SAAUA,KAGd,yBAAK5B,UAAU,YACb,kBAAC,GAAD,CAAQP,MAAM,2BAEhB,yBAAKO,UAAU,YACb,kBAAC,EAAD,CACEyC,IAAI,sBACJpC,aAAcA,QAS5BqG,IAASC,OAAO,kBAACL,GAAD,MAASM,SAASC,eAAe,W","file":"static/js/main.034be8fc.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom: 8px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst Date = styled.span`\n`;\n\nconst Details = styled.div`\n    display: flex;\n    flex-direction:column;\n    padding: 5px;\n    flex-grow: 1;\n`;\nconst Info = styled.div``;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n`;\nconst Title = styled.div`\n    font-size: 12px;\n    color: #a9a9a9;\n    display: flex;\n`;\nconst Sum = styled.div`\n    display: flex;\n    font-size: 12px;\n    color: #a9a9a9;\n`;\n\nfunction Transaction(props) {\n    const { transaction } = props;\n    const { title, date, parsedDetails: { Detalii, Beneficiar }, credit, debit } = transaction;\n    return (\n        <Container>\n            <Details>\n                <Info>{Detalii ? Detalii : Beneficiar ? Beneficiar : ' - '}</Info>\n                <Date>{date}</Date>\n                <Footer>\n                    <Title>{title}</Title>\n                    <Sum>{credit === '0' ?\n                        <span className=\"text-danger\">{debit}</span> :\n                        <span className=\"text-success\">{credit}</span>}</Sum>\n                </Footer>\n            </Details>\n        </Container>\n    )\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Transaction from \"../transaction\";\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgray;\n  border-radius: 2px;\n  height: 600px;\n  overflow: scroll;\n  overflow-x: hidden;\n\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h3`\n  padding: 8px;\n`;\nconst Items = styled.div`\n  padding: 8px;\n`;\nconst Filter = styled.div`\n  padding: 8px;\n`;\n\nfunction Transactions(props) {\n  const { transactions = [] } = props;\n\n  return (\n    <Container>\n      <Title>\n        <span>{transactions.length}</span> Transactions\n      </Title>\n      <Filter>\n        <form>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"input-group input-group-sm mb-3\">\n                <div className=\"input-group-prepend\">\n                  <button\n                    className=\"btn btn-outline-secondary dropdown-toggle\"\n                    type=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Source Account\n                  </button>\n                  <div className=\"dropdown-menu\">acounts...</div>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Text input with dropdown button\"\n                ></input>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"input-group input-group-sm mb-3\">\n                <div className=\"input-group-prepend\">\n                  <button className=\"btn btn-outline-success\" type=\"submit\">\n                    Search\n                  </button>\n                </div>\n                <input\n                  className=\"form-control mr-sm-2\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"btn-group btn-group-sm\">\n                <button type=\"button\" className=\"btn btn-outline-secondary\">\n                  All transactions\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\"\n                  id=\"dropdownMenuReference\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  data-reference=\"parent\"\n                >\n                  <span className=\"sr-only\">Toggle Dropdown</span>\n                </button>\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"dropdownMenuReference\"\n                >\n                  <a className=\"dropdown-item\" href=\"1\">\n                    Expences\n                  </a>\n                  <a className=\"dropdown-item\" href=\"2\">\n                    Incomes\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Filter>\n      <Items>\n        {transactions.map((transaction) => (\n          <Transaction transaction={transaction} />\n        ))}\n      </Items>\n    </Container>\n  );\n}\n\nexport default Transactions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom: 8px;\n    \n`;\n\nfunction Account(props) {\n    const { account } = props;\n    return (\n        <Container>\n            {account && account}\n        </Container>\n    )\n}\n\nexport default Account;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom: 8px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst Date = styled.div`\n    border: 1px solid #a9a9a9;\n    display: flex;\n    flex-direction: column;\n    padding: 2px 10px;\n    align-content: center;\n    border-radius: 4px;\n    max-height: 50px;\n    \n`;\nconst Day = styled.div`\n    text-align:center;\n    font-weight: bold;\n    font-size: 16px;\n`;\nconst Month = styled.div`\n`;\nconst Details = styled.div`\n    display: flex;\n    flex-direction:column;\n    padding: 5px;\n    flex-grow: 1;\n`;\nconst Info = styled.div``;\n\nconst Line = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n`;\nconst Title = styled.div`\n    font-size: 12px;\n    color: #a9a9a9;\n    display: flex;\n`;\nconst Sum = styled.div`\n    display: flex;\n    font-size: 12px;\n    color: #a9a9a9;\n`;\nconst Button = styled.button`\n \n`;\n\nfunction AssignedTransaction() {\n    return (\n        <Container>\n            <Date>\n                <Day>18</Day>\n                <Month>Aug</Month>\n            </Date>\n            <Details>\n                <Info>Journey in the center of the Earth</Info>\n                <Line>\n                    <Title>Adventures</Title>\n                    <Sum className=\"text-danger\">500</Sum>\n                </Line>\n                <Line>\n                    <Title className=\"text-info\">From: Assets:INGB:Cont Curent</Title>\n                    <Title className=\"text-info\">To: Expenses:Adventures</Title>\n                    <Button>switch</Button>\n                </Line>\n            </Details>\n        </Container>\n    )\n}\n\nexport default AssignedTransaction;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Transaction from './transaction';\nimport Account from './account';\nimport AssignedTransaction from './assigned-transaction';\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    height: 600px;\n    overflow: scroll;\n    overflow-x: hidden;\n\n    display: flex;\n    flex-direction: column;\n`;\nconst Title = styled.h3`\n    padding: 8px;\n`;\nconst Items = styled.div`\n    padding: 8px;\n`;\nconst Filter = styled.div`\n    padding: 8px;\n`;\n\nexport default class Column extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Title>{this.props.title}</Title>\n                <Filter>\n                    <form>\n                        <div className=\"row\">\n                            {this.props.title === 'Transactions' &&\n                                <div className=\"col-md-12\">\n                                    <div className=\"input-group input-group-sm mb-3\">\n                                        <div className=\"input-group-prepend\">\n                                            <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Source Account</button>\n                                            <div className=\"dropdown-menu\">\n                                               acounts...\n                                </div>\n                                        </div>\n                                        <input type=\"text\" className=\"form-control\" aria-label=\"Text input with dropdown button\"></input>\n                                    </div>\n                                </div>\n                            }\n\n                            <div className=\"col-md-6\">\n                                <div className=\"input-group input-group-sm mb-3\">\n                                    <div className=\"input-group-prepend\">\n                                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                                    </div>\n                                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                                </div>\n                            </div>\n                            {this.props.title === 'Transactions' &&\n                                <div className=\"col-md-6\">\n                                    <div className=\"btn-group btn-group-sm\">\n                                        <button type=\"button\" className=\"btn btn-outline-secondary\">All transactions</button>\n                                        <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" id=\"dropdownMenuReference\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" data-reference=\"parent\">\n                                            <span className=\"sr-only\">Toggle Dropdown</span>\n                                        </button>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuReference\">\n                                            <a className=\"dropdown-item\" href=\"1\">Expences</a>\n                                            <a className=\"dropdown-item\" href=\"2\">Incomes</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </form>\n                </Filter>\n                <Items>\n                    {this.props.transactions && this.props.transactions.map(\n                        function (transaction) {\n                            return (\n                                <Transaction transaction={transaction} />\n                            )\n                        }\n                    )}\n                    {this.props.accounts && this.props.accounts.map(\n                        function (account) {\n                            return (\n                                <Account account={account} />\n                            )\n                        }\n                    )}\n                    {this.props.title === \"Assigned transactions\" &&\n                        <AssignedTransaction />\n                    }\n                </Items>\n            </Container>\n        );\n    }\n}","import Papa from \"papaparse\";\nimport _ from \"lodash\";\nimport formatISO from 'date-fns/formatISO';\nimport parse from 'date-fns/parse';\nimport ro from 'date-fns/locale/ro';\n\n/**\n * Process CSV file with ING transactions and return a javacript array with all the transactions.\n * @param {*} file\n */\nexport function processCsv(data) {\n  const cleanedCsv = cleanTransactionsLines(data);\n  const result = parseTransactions(prefixWithTransactionCount(cleanedCsv));\n  return result;\n}\n\n/**\n * Parses an ammount and ensures it is valid.\n * Always returns valid numeric.\n * Never returns null or empty.\n *\n * @param {*} amount\n */\nexport function safeParseAmount(amount) {\n  if (amount == null || amount === \"\") {\n    return \"0\";\n  }\n  return amount;\n}\n\n/**\n * Parse localized ING data and returns a Date object.\n * @param {*} date\n */\nexport function localDateToLocalDateIsoFormat(date) {\n  try {\n    const result = parse(date, 'dd MMMM yyyy', new Date(), {\n      locale: ro\n    });\n    // console.log(`Date is '${date}' - ${result}`);\n    return formatISO(result, { representation: 'date' })\n\n  } catch (e) {\n    return \"2050-01-01\";\n  }\n}\n\n/**\n * Converts a transaction row from CSV to a transaction object.\n * Parses details and does some input sanitisation.\n *\n * @param {*} txNumber\n * @param {*} rows\n */\nexport function buildTransaction(txNumber, rows) {\n  const firstRow = rows[0];\n\n  const debit = safeParseAmount(firstRow[5]),\n    credit = safeParseAmount(firstRow[7]),\n    balance = safeParseAmount(firstRow[8]);\n\n  const details = rows.slice(1).map((cols) => cols[4]);\n\n  let parsedDetails = {};\n\n  _.forEach(details, (str) => {\n    if (str.indexOf(\":\") > 0) {\n      let s = str.split(\":\", 2);\n      parsedDetails[s[0]] = s[1];\n    } else {\n      parsedDetails[str] = str;\n    }\n  });\n\n  const txn = {\n    txNumber: txNumber,\n    date: localDateToLocalDateIsoFormat(firstRow[1]),\n    title: firstRow[4],\n    debit: debit,\n    credit: credit,\n    balance: balance,\n    originalData: rows,\n    details: details,\n    parsedDetails: parsedDetails,\n  };\n\n  return txn;\n}\n\n/**\n * Parse multi-line transactions rows from the CSV.\n * Converts each multi-line transaction to a single transaction object.\n * Returns a the array of transaction objects.\n *\n * @param {*} transactionLines\n */\nexport function parseTransactions(transactionLines) {\n  const groupedTxns = _.groupBy(transactionLines, (row) => row[0]);\n\n  let txns = [];\n\n  for (let [key, value] of Object.entries(groupedTxns)) {\n    const txn = buildTransaction(key, value);\n    txns.push(txn);\n  }\n  console.log(txns);\n  return txns;\n}\n\n/**\nProcess the list of transactions and add the transaction number/count as a prefix to all rows\nthat belong to the same transaction.\n*/\nexport function prefixWithTransactionCount(transactionRows) {\n  let count = 0;\n  const processedLines = transactionRows.map((row) => {\n    if (!(row[0] === \"\")) {\n      count++;\n    }\n    let rowData = [count];\n    rowData = rowData.concat(row);\n    // console.log(rowData);\n    return rowData;\n  });\n\n  return processedLines;\n}\n\n/**\nRemoves CSV data that is not part of transactions: headers and footers from ING:\n- the repeated csv table header\n- the information about ING representative\n*/\nexport function cleanTransactionsLines(lines) {\n  const transactionRows = lines\n    .filter((row) => !(row[0] === \"Data\"))\n    .filter((it) => it[1] === \"\")\n    .filter((it) => it[2] === \"\");\n\n  //   console.log(transactionRows);\n\n  return transactionRows;\n}\n\n/**\n * Parse a CSV string or File object received as parameter.\n * Returns a list of rows as array.\n *\n * @param {*} csvData\n */\nexport function parseCsv(csvData) {\n  const csv = Papa.parse(csvData);\n  //   console.log(csv);\n\n  return csv;\n}\n","import React, { useCallback } from \"react\";\n\nimport { useDropzone } from \"react-dropzone\";\n\nimport styled from \"styled-components\";\nimport Papa from \"papaparse\";\n\nimport { processCsv } from \"../ing-parser\";\n\nconst DropZone = styled.div`\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: #eeeeee;\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nfunction TransactionFileImport(props) {\n  const { setTransactions } = props;\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      acceptedFiles.forEach((file) => {\n        Papa.parse(file, {\n          complete: (results, file) => {\n            console.log(`Processed CSV file ${file.name}`);\n            const { data } = results;\n            const txns = processCsv(data);\n            setTransactions(txns);\n          },\n          error: (error, file) => {\n            console.log(`Error processing ${file.name} - ${error}`);\n            alert(`Error processing ${file.name} - ${error}`);\n          },\n        });\n      });\n    },\n    [setTransactions]\n  );\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    onDrop,\n  });\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <DropZone {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop CSV files here, or click to select files</p>\n      </DropZone>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n}\n\n\nexport default TransactionFileImport;","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@atlaskit/css-reset\";\n\nimport Transactions from './components/Transactions';\nimport Column from \"./column\";\nimport TransactionFileImport from \"./components/TransactionFileImport\";\n\nimport initialData from \"./data/2017.json\";\nimport initialAccounts from \"./data/accounts.json\";\n\nconst HomeBank = () => (\n  <a href=\"https://homebank.ro\" target=\"_blank\" rel=\"noreferrer noopener\">\n    homebank.ro\n  </a>\n);\n\nfunction Introduction() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <h2>Assign transactions to accounts</h2>\n          <p>\n            Simple application to assign transactions exported from ING HomeBank\n            to accounts. Used by tools like{\" \"}\n            <a\n              href=\"https://hledger.org/\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              hledger\n            </a>{\" \"}\n            from{\" \"}\n            <a\n              href=\"https://plaintextaccounting.org/\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              plaintextaccounting.org\n            </a>\n          </p>\n          <h3>Steps to use the application</h3>\n          <ul>\n            <li>\n              Export transactions from <HomeBank />{\" \"}\n            </li>\n            <li>\n              Export accounts from <strong>ledger/hledger</strong> using{\" \"}\n              <code>hledger accounts</code> command.\n            </li>\n            <li>Import both accounts and transcations list here</li>\n            <li>Assign each transaction to an account by dragging it over</li>\n            <li>Export transactions list as JSON or hledger format</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [transactions, setTransactions] = useState(initialData);\n  const [accounts, setAccounts] = useState(initialAccounts);\n\n  return (\n    <>\n      <Introduction />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <textarea\n              className=\"form-control\"\n              rows=\"5\"\n              placeholder=\"Accounts list:\"\n            ></textarea>\n          </div>\n          <div className=\"col-md-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary btn-block mb-2\"\n            >\n              Update Accounts list\n            </button>\n            <TransactionFileImport setTransactions={setTransactions} />\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary btn-block mt-2\"\n            >\n              Export data\n            </button>\n          </div>\n          <div className=\"col-md-4\"></div>\n\n          <div className=\"col-md-4\">\n            <Column\n              key=\"accounts-column\"\n              title=\"Accounts\"\n              accounts={accounts}\n            />\n          </div>\n          <div className=\"col-md-4\">\n            <Column title=\"Assigned transactions\" />\n          </div>\n          <div className=\"col-md-4\">\n            <Transactions\n              key=\"transactions-column\"\n              transactions={transactions}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}